{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"/Users/sudhanshumishra/Downloads/task-management-system/frontend/src/components/UserForm.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst UserForm = ({\n  user,\n  onSubmit,\n  buttonText = \"Submit\"\n}) => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [role, setRole] = useState(\"user\");\n  const [errors, setErrors] = useState({});\n\n  // If editing, populate form with user data\n  useEffect(() => {\n    if (user) {\n      setEmail(user.email || \"\");\n      setRole(user.role || \"user\");\n    }\n  }, [user]);\n  const validateForm = () => {\n    const newErrors = {};\n    if (!email.trim()) {\n      newErrors.email = \"Email is required\";\n    } else if (!/\\S+@\\S+\\.\\S+/.test(email)) {\n      newErrors.email = \"Email is invalid\";\n    }\n    if (!user) {\n      // Only validate password for new users\n      if (!password) {\n        newErrors.password = \"Password is required\";\n      } else if (password.length < 6) {\n        newErrors.password = \"Password must be at least 6 characters\";\n      }\n      if (password !== confirmPassword) {\n        newErrors.confirmPassword = \"Passwords do not match\";\n      }\n    }\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (validateForm()) {\n      const userData = {\n        email,\n        role\n      };\n      if (!user) {\n        // Only include password for new users\n        userData.password = password;\n      }\n      onSubmit(userData);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"space-y-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        className: \"block text-sm font-medium text-gray-700\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        className: `mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 ${errors.email ? \"border-red-500\" : \"\"}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), errors.email && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mt-1 text-sm text-red-600\",\n        children: errors.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), !user &&\n    /*#__PURE__*/\n    // Only show password fields for new users\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          className: \"block text-sm font-medium text-gray-700\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          className: `mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 ${errors.password ? \"border-red-500\" : \"\"}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), errors.password && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-1 text-sm text-red-600\",\n          children: errors.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"confirmPassword\",\n          className: \"block text-sm font-medium text-gray-700\",\n          children: \"Confirm Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"confirmPassword\",\n          value: confirmPassword,\n          onChange: e => setConfirmPassword(e.target.value),\n          className: `mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 ${errors.confirmPassword ? \"border-red-500\" : \"\"}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this), errors.confirmPassword && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-1 text-sm text-red-600\",\n          children: errors.confirmPassword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 40\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"role\",\n        className: \"block text-sm font-medium text-gray-700\",\n        children: \"Role\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"role\",\n        value: role,\n        onChange: e => setRole(e.target.value),\n        className: \"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"user\",\n          children: \"User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"admin\",\n          children: \"Admin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\",\n        children: buttonText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(UserForm, \"1JcHHPahw1FljcQIR/uiHCq1xqA=\");\n_c = UserForm;\nexport default UserForm;\nvar _c;\n$RefreshReg$(_c, \"UserForm\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","UserForm","user","onSubmit","buttonText","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","role","setRole","errors","setErrors","validateForm","newErrors","trim","test","length","Object","keys","handleSubmit","e","preventDefault","userData","className","children","htmlFor","fileName","lineNumber","columnNumber","type","id","value","onChange","target","_c","$RefreshReg$"],"sources":["/Users/sudhanshumishra/Downloads/task-management-system/frontend/src/components/UserForm.jsx"],"sourcesContent":["\"use client\"\n\nimport { useState, useEffect } from \"react\"\n\nconst UserForm = ({ user, onSubmit, buttonText = \"Submit\" }) => {\n  const [email, setEmail] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n  const [confirmPassword, setConfirmPassword] = useState(\"\")\n  const [role, setRole] = useState(\"user\")\n  const [errors, setErrors] = useState({})\n\n  // If editing, populate form with user data\n  useEffect(() => {\n    if (user) {\n      setEmail(user.email || \"\")\n      setRole(user.role || \"user\")\n    }\n  }, [user])\n\n  const validateForm = () => {\n    const newErrors = {}\n\n    if (!email.trim()) {\n      newErrors.email = \"Email is required\"\n    } else if (!/\\S+@\\S+\\.\\S+/.test(email)) {\n      newErrors.email = \"Email is invalid\"\n    }\n\n    if (!user) {\n      // Only validate password for new users\n      if (!password) {\n        newErrors.password = \"Password is required\"\n      } else if (password.length < 6) {\n        newErrors.password = \"Password must be at least 6 characters\"\n      }\n\n      if (password !== confirmPassword) {\n        newErrors.confirmPassword = \"Passwords do not match\"\n      }\n    }\n\n    setErrors(newErrors)\n    return Object.keys(newErrors).length === 0\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n\n    if (validateForm()) {\n      const userData = {\n        email,\n        role,\n      }\n\n      if (!user) {\n        // Only include password for new users\n        userData.password = password\n      }\n\n      onSubmit(userData)\n    }\n  }\n\n  return (\n    <form onSubmit={handleSubmit} className=\"space-y-6\">\n      <div>\n        <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">\n          Email\n        </label>\n        <input\n          type=\"email\"\n          id=\"email\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          className={`mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 ${\n            errors.email ? \"border-red-500\" : \"\"\n          }`}\n        />\n        {errors.email && <p className=\"mt-1 text-sm text-red-600\">{errors.email}</p>}\n      </div>\n\n      {!user && ( // Only show password fields for new users\n        <>\n          <div>\n            <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700\">\n              Password\n            </label>\n            <input\n              type=\"password\"\n              id=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              className={`mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 ${\n                errors.password ? \"border-red-500\" : \"\"\n              }`}\n            />\n            {errors.password && <p className=\"mt-1 text-sm text-red-600\">{errors.password}</p>}\n          </div>\n\n          <div>\n            <label htmlFor=\"confirmPassword\" className=\"block text-sm font-medium text-gray-700\">\n              Confirm Password\n            </label>\n            <input\n              type=\"password\"\n              id=\"confirmPassword\"\n              value={confirmPassword}\n              onChange={(e) => setConfirmPassword(e.target.value)}\n              className={`mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 ${\n                errors.confirmPassword ? \"border-red-500\" : \"\"\n              }`}\n            />\n            {errors.confirmPassword && <p className=\"mt-1 text-sm text-red-600\">{errors.confirmPassword}</p>}\n          </div>\n        </>\n      )}\n\n      <div>\n        <label htmlFor=\"role\" className=\"block text-sm font-medium text-gray-700\">\n          Role\n        </label>\n        <select\n          id=\"role\"\n          value={role}\n          onChange={(e) => setRole(e.target.value)}\n          className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500\"\n        >\n          <option value=\"user\">User</option>\n          <option value=\"admin\">Admin</option>\n        </select>\n      </div>\n\n      <div>\n        <button\n          type=\"submit\"\n          className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n        >\n          {buttonText}\n        </button>\n      </div>\n    </form>\n  )\n}\n\nexport default UserForm\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}