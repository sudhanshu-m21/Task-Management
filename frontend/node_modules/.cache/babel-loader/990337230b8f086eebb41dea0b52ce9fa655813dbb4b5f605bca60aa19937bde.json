{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"/Users/sudhanshumishra/Downloads/task-management-system/frontend/src/contexts/UserContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useState, useContext, useEffect } from \"react\";\nimport api from \"../utils/api\";\nimport { useAuth } from \"./AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserContext = /*#__PURE__*/createContext();\nexport const useUsers = () => {\n  _s();\n  return useContext(UserContext);\n};\n_s(useUsers, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const UserProvider = ({\n  children\n}) => {\n  _s2();\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const {\n    isAuthenticated,\n    user\n  } = useAuth();\n\n  // Fetch users when authenticated and user is admin\n  useEffect(() => {\n    if (isAuthenticated && (user === null || user === void 0 ? void 0 : user.role) === \"admin\") {\n      fetchUsers();\n    }\n  }, [isAuthenticated, user]);\n\n  // Fetch all users (admin only)\n  const fetchUsers = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await api.get(\"/api/users\");\n      setUsers(response.data);\n      setLoading(false);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setLoading(false);\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || \"Failed to fetch users\");\n    }\n  };\n\n  // Get a single user by ID\n  const getUser = async userId => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await api.get(`/api/users/${userId}`);\n      setLoading(false);\n      return {\n        success: true,\n        user: response.data\n      };\n    } catch (err) {\n      var _err$response2, _err$response2$data, _err$response3, _err$response3$data;\n      setLoading(false);\n      setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || \"Failed to fetch user\");\n      return {\n        success: false,\n        error: ((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.message) || \"Failed to fetch user\"\n      };\n    }\n  };\n\n  // Create a new user (admin only)\n  const createUser = async userData => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await api.post(\"/api/users\", userData);\n      setUsers([...users, response.data]);\n      setLoading(false);\n      return {\n        success: true,\n        user: response.data\n      };\n    } catch (err) {\n      var _err$response4, _err$response4$data, _err$response5, _err$response5$data;\n      setLoading(false);\n      setError(((_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : (_err$response4$data = _err$response4.data) === null || _err$response4$data === void 0 ? void 0 : _err$response4$data.message) || \"Failed to create user\");\n      return {\n        success: false,\n        error: ((_err$response5 = err.response) === null || _err$response5 === void 0 ? void 0 : (_err$response5$data = _err$response5.data) === null || _err$response5$data === void 0 ? void 0 : _err$response5$data.message) || \"Failed to create user\"\n      };\n    }\n  };\n\n  // Update an existing user (admin only)\n  const updateUser = async (userId, userData) => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await api.put(`/api/users/${userId}`, userData);\n      setUsers(users.map(user => user._id === userId ? response.data : user));\n      setLoading(false);\n      return {\n        success: true,\n        user: response.data\n      };\n    } catch (err) {\n      var _err$response6, _err$response6$data, _err$response7, _err$response7$data;\n      setLoading(false);\n      setError(((_err$response6 = err.response) === null || _err$response6 === void 0 ? void 0 : (_err$response6$data = _err$response6.data) === null || _err$response6$data === void 0 ? void 0 : _err$response6$data.message) || \"Failed to update user\");\n      return {\n        success: false,\n        error: ((_err$response7 = err.response) === null || _err$response7 === void 0 ? void 0 : (_err$response7$data = _err$response7.data) === null || _err$response7$data === void 0 ? void 0 : _err$response7$data.message) || \"Failed to update user\"\n      };\n    }\n  };\n\n  // Delete a user (admin only)\n  const deleteUser = async userId => {\n    setLoading(true);\n    setError(null);\n    try {\n      await api.delete(`/api/users/${userId}`);\n      setUsers(users.filter(user => user._id !== userId));\n      setLoading(false);\n      return {\n        success: true\n      };\n    } catch (err) {\n      var _err$response8, _err$response8$data, _err$response9, _err$response9$data;\n      setLoading(false);\n      setError(((_err$response8 = err.response) === null || _err$response8 === void 0 ? void 0 : (_err$response8$data = _err$response8.data) === null || _err$response8$data === void 0 ? void 0 : _err$response8$data.message) || \"Failed to delete user\");\n      return {\n        success: false,\n        error: ((_err$response9 = err.response) === null || _err$response9 === void 0 ? void 0 : (_err$response9$data = _err$response9.data) === null || _err$response9$data === void 0 ? void 0 : _err$response9$data.message) || \"Failed to delete user\"\n      };\n    }\n  };\n  const value = {\n    users,\n    loading,\n    error,\n    fetchUsers,\n    getUser,\n    createUser,\n    updateUser,\n    deleteUser\n  };\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 10\n  }, this);\n};\n_s2(UserProvider, \"BO4frhBrV1WdRSDe8ahQQ9qHuAE=\", false, function () {\n  return [useAuth];\n});\n_c = UserProvider;\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","_s2","createContext","useState","useContext","useEffect","api","useAuth","jsxDEV","_jsxDEV","UserContext","useUsers","UserProvider","children","users","setUsers","loading","setLoading","error","setError","isAuthenticated","user","role","fetchUsers","response","get","data","err","_err$response","_err$response$data","message","getUser","userId","success","_err$response2","_err$response2$data","_err$response3","_err$response3$data","createUser","userData","post","_err$response4","_err$response4$data","_err$response5","_err$response5$data","updateUser","put","map","_id","_err$response6","_err$response6$data","_err$response7","_err$response7$data","deleteUser","delete","filter","_err$response8","_err$response8$data","_err$response9","_err$response9$data","value","Provider","fileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/sudhanshumishra/Downloads/task-management-system/frontend/src/contexts/UserContext.jsx"],"sourcesContent":["\"use client\";\n\nimport { createContext, useState, useContext, useEffect } from \"react\";\nimport api from \"../utils/api\";\nimport { useAuth } from \"./AuthContext\";\n\nconst UserContext = createContext();\n\nexport const useUsers = () => useContext(UserContext);\n\nexport const UserProvider = ({ children }) => {\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const { isAuthenticated, user } = useAuth();\n\n  // Fetch users when authenticated and user is admin\n  useEffect(() => {\n    if (isAuthenticated && user?.role === \"admin\") {\n      fetchUsers();\n    }\n  }, [isAuthenticated, user]);\n\n  // Fetch all users (admin only)\n  const fetchUsers = async () => {\n    setLoading(true);\n    setError(null);\n\n    try {\n      const response = await api.get(\"/api/users\");\n      setUsers(response.data);\n      setLoading(false);\n    } catch (err) {\n      setLoading(false);\n      setError(err.response?.data?.message || \"Failed to fetch users\");\n    }\n  };\n\n  // Get a single user by ID\n  const getUser = async (userId) => {\n    setLoading(true);\n    setError(null);\n\n    try {\n      const response = await api.get(`/api/users/${userId}`);\n      setLoading(false);\n      return { success: true, user: response.data };\n    } catch (err) {\n      setLoading(false);\n      setError(err.response?.data?.message || \"Failed to fetch user\");\n      return {\n        success: false,\n        error: err.response?.data?.message || \"Failed to fetch user\",\n      };\n    }\n  };\n\n  // Create a new user (admin only)\n  const createUser = async (userData) => {\n    setLoading(true);\n    setError(null);\n\n    try {\n      const response = await api.post(\"/api/users\", userData);\n      setUsers([...users, response.data]);\n      setLoading(false);\n      return { success: true, user: response.data };\n    } catch (err) {\n      setLoading(false);\n      setError(err.response?.data?.message || \"Failed to create user\");\n      return {\n        success: false,\n        error: err.response?.data?.message || \"Failed to create user\",\n      };\n    }\n  };\n\n  // Update an existing user (admin only)\n  const updateUser = async (userId, userData) => {\n    setLoading(true);\n    setError(null);\n\n    try {\n      const response = await api.put(`/api/users/${userId}`, userData);\n      setUsers(\n        users.map((user) => (user._id === userId ? response.data : user))\n      );\n      setLoading(false);\n      return { success: true, user: response.data };\n    } catch (err) {\n      setLoading(false);\n      setError(err.response?.data?.message || \"Failed to update user\");\n      return {\n        success: false,\n        error: err.response?.data?.message || \"Failed to update user\",\n      };\n    }\n  };\n\n  // Delete a user (admin only)\n  const deleteUser = async (userId) => {\n    setLoading(true);\n    setError(null);\n\n    try {\n      await api.delete(`/api/users/${userId}`);\n      setUsers(users.filter((user) => user._id !== userId));\n      setLoading(false);\n      return { success: true };\n    } catch (err) {\n      setLoading(false);\n      setError(err.response?.data?.message || \"Failed to delete user\");\n      return {\n        success: false,\n        error: err.response?.data?.message || \"Failed to delete user\",\n      };\n    }\n  };\n\n  const value = {\n    users,\n    loading,\n    error,\n    fetchUsers,\n    getUser,\n    createUser,\n    updateUser,\n    deleteUser,\n  };\n\n  return <UserContext.Provider value={value}>{children}</UserContext.Provider>;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}